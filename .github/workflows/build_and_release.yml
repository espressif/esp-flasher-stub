---
name: Build and release

on: [push, pull_request]

jobs:
  build_stubs:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout ref commit
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install esptool

      - name: Install toolchains
        shell: bash
        run: |
          mkdir -p toolchains
          pushd toolchains
          ../tools/setup_toolchains.sh
          popd

      - name: Build stub
        shell: bash
        run: |
          source ./tools/export_toolchains.sh
          ./tools/build_all_chips.sh

      - name: Upload stub JSONs
        uses: actions/upload-artifact@v4
        with:
          path: build*/esp*.json
          if-no-files-found: error
          retention-days: 3

  create_release:
    name: Create GitHub release
    needs: build_stubs
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install commitizen czespressif
      - name: Generate changelog
        run: |
          cz changelog ${{ steps.get_version.outputs.VERSION }} --file-name changelog_body.md
          cat changelog_body.md
      - name: Download stub JSONs
        uses: actions/download-artifact@v4
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: changelog_body.md
          name: Version ${{ steps.get_version.outputs.VERSION }}
          draft: true
          prerelease: false
          fail_on_unmatched_files: true
          files: artifact/build*/esp*.json
